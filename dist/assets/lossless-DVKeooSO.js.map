{"version":3,"file":"lossless-DVKeooSO.js","sources":["../../node_modules/jpeg-lossless-decoder-js/release/lossless.js"],"sourcesContent":["var __defProp = Object.defineProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\n\n// src/component-spec.ts\nvar ComponentSpec = {\n  hSamp: 0,\n  quantTableSel: 0,\n  vSamp: 0\n};\n\n// src/data-stream.ts\nvar DataStream = class {\n  buffer;\n  index;\n  constructor(data, offset, length) {\n    this.buffer = new Uint8Array(data, offset, length);\n    this.index = 0;\n  }\n  get16() {\n    const value = (this.buffer[this.index] << 8) + this.buffer[this.index + 1];\n    this.index += 2;\n    return value;\n  }\n  get8() {\n    const value = this.buffer[this.index];\n    this.index += 1;\n    return value;\n  }\n};\n\n// src/frame-header.ts\nvar FrameHeader = class {\n  dimX = 0;\n  dimY = 0;\n  numComp = 0;\n  precision = 0;\n  components = [];\n  read(data) {\n    let count = 0;\n    let temp;\n    const length = data.get16();\n    count += 2;\n    this.precision = data.get8();\n    count += 1;\n    this.dimY = data.get16();\n    count += 2;\n    this.dimX = data.get16();\n    count += 2;\n    this.numComp = data.get8();\n    count += 1;\n    for (let i = 1; i <= this.numComp; i += 1) {\n      if (count > length) {\n        throw new Error(\"ERROR: frame format error\");\n      }\n      const c = data.get8();\n      count += 1;\n      if (count >= length) {\n        throw new Error(\"ERROR: frame format error [c>=Lf]\");\n      }\n      temp = data.get8();\n      count += 1;\n      if (!this.components[c]) {\n        this.components[c] = { ...ComponentSpec };\n      }\n      this.components[c].hSamp = temp >> 4;\n      this.components[c].vSamp = temp & 15;\n      this.components[c].quantTableSel = data.get8();\n      count += 1;\n    }\n    if (count !== length) {\n      throw new Error(\"ERROR: frame format error [Lf!=count]\");\n    }\n    return 1;\n  }\n};\n\n// src/utils.ts\nvar utils_exports = {};\n__export(utils_exports, {\n  crc32: () => crc32,\n  crcTable: () => crcTable,\n  createArray: () => createArray,\n  makeCRCTable: () => makeCRCTable\n});\nvar createArray = (...dimensions) => {\n  if (dimensions.length > 1) {\n    const dim = dimensions[0];\n    const rest = dimensions.slice(1);\n    const newArray = [];\n    for (let i = 0; i < dim; i++) {\n      newArray[i] = createArray(...rest);\n    }\n    return newArray;\n  } else {\n    return Array(dimensions[0]).fill(void 0);\n  }\n};\nvar makeCRCTable = function() {\n  let c;\n  const crcTable2 = [];\n  for (let n = 0; n < 256; n++) {\n    c = n;\n    for (let k = 0; k < 8; k++) {\n      c = c & 1 ? 3988292384 ^ c >>> 1 : c >>> 1;\n    }\n    crcTable2[n] = c;\n  }\n  return crcTable2;\n};\nvar crcTable = makeCRCTable();\nvar crc32 = function(buffer) {\n  const uint8view = new Uint8Array(buffer);\n  let crc = 0 ^ -1;\n  for (let i = 0; i < uint8view.length; i++) {\n    crc = crc >>> 8 ^ crcTable[(crc ^ uint8view[i]) & 255];\n  }\n  return (crc ^ -1) >>> 0;\n};\n\n// src/huffman-table.ts\nvar HuffmanTable = class _HuffmanTable {\n  static MSB = 2147483648;\n  l;\n  th;\n  v;\n  tc;\n  constructor() {\n    this.l = createArray(4, 2, 16);\n    this.th = [0, 0, 0, 0];\n    this.v = createArray(4, 2, 16, 200);\n    this.tc = [\n      [0, 0],\n      [0, 0],\n      [0, 0],\n      [0, 0]\n    ];\n  }\n  read(data, HuffTab) {\n    let count = 0;\n    let temp;\n    let t;\n    let c;\n    let i;\n    let j;\n    const length = data.get16();\n    count += 2;\n    while (count < length) {\n      temp = data.get8();\n      count += 1;\n      t = temp & 15;\n      if (t > 3) {\n        throw new Error(\"ERROR: Huffman table ID > 3\");\n      }\n      c = temp >> 4;\n      if (c > 2) {\n        throw new Error(\"ERROR: Huffman table [Table class > 2 ]\");\n      }\n      this.th[t] = 1;\n      this.tc[t][c] = 1;\n      for (i = 0; i < 16; i += 1) {\n        this.l[t][c][i] = data.get8();\n        count += 1;\n      }\n      for (i = 0; i < 16; i += 1) {\n        for (j = 0; j < this.l[t][c][i]; j += 1) {\n          if (count > length) {\n            throw new Error(\"ERROR: Huffman table format error [count>Lh]\");\n          }\n          this.v[t][c][i][j] = data.get8();\n          count += 1;\n        }\n      }\n    }\n    if (count !== length) {\n      throw new Error(\"ERROR: Huffman table format error [count!=Lf]\");\n    }\n    for (i = 0; i < 4; i += 1) {\n      for (j = 0; j < 2; j += 1) {\n        if (this.tc[i][j] !== 0) {\n          this.buildHuffTable(HuffTab[i][j], this.l[i][j], this.v[i][j]);\n        }\n      }\n    }\n    return 1;\n  }\n  //\tBuild_HuffTab()\n  //\tParameter:  t       table ID\n  //\t            c       table class ( 0 for DC, 1 for AC )\n  //\t            L[i]    # of codewords which length is i\n  //\t            V[i][j] Huffman Value (length=i)\n  //\tEffect:\n  //\t    build up HuffTab[t][c] using L and V.\n  buildHuffTable(tab, L, V) {\n    let currentTable, k, i, j, n;\n    const temp = 256;\n    k = 0;\n    for (i = 0; i < 8; i += 1) {\n      for (j = 0; j < L[i]; j += 1) {\n        for (n = 0; n < temp >> i + 1; n += 1) {\n          tab[k] = V[i][j] | i + 1 << 8;\n          k += 1;\n        }\n      }\n    }\n    for (i = 1; k < 256; i += 1, k += 1) {\n      tab[k] = i | _HuffmanTable.MSB;\n    }\n    currentTable = 1;\n    k = 0;\n    for (i = 8; i < 16; i += 1) {\n      for (j = 0; j < L[i]; j += 1) {\n        for (n = 0; n < temp >> i - 7; n += 1) {\n          tab[currentTable * 256 + k] = V[i][j] | i + 1 << 8;\n          k += 1;\n        }\n        if (k >= 256) {\n          if (k > 256) {\n            throw new Error(\"ERROR: Huffman table error(1)!\");\n          }\n          k = 0;\n          currentTable += 1;\n        }\n      }\n    }\n  }\n};\n\n// src/quantization-table.ts\nvar QuantizationTable = class _QuantizationTable {\n  precision = [];\n  // Quantization precision 8 or 16\n  tq = [0, 0, 0, 0];\n  // 1: this table is presented\n  quantTables = createArray(4, 64);\n  // Tables\n  static enhanceQuantizationTable = function(qtab, table) {\n    for (let i = 0; i < 8; i += 1) {\n      qtab[table[0 * 8 + i]] *= 90;\n      qtab[table[4 * 8 + i]] *= 90;\n      qtab[table[2 * 8 + i]] *= 118;\n      qtab[table[6 * 8 + i]] *= 49;\n      qtab[table[5 * 8 + i]] *= 71;\n      qtab[table[1 * 8 + i]] *= 126;\n      qtab[table[7 * 8 + i]] *= 25;\n      qtab[table[3 * 8 + i]] *= 106;\n    }\n    for (let i = 0; i < 8; i += 1) {\n      qtab[table[0 + 8 * i]] *= 90;\n      qtab[table[4 + 8 * i]] *= 90;\n      qtab[table[2 + 8 * i]] *= 118;\n      qtab[table[6 + 8 * i]] *= 49;\n      qtab[table[5 + 8 * i]] *= 71;\n      qtab[table[1 + 8 * i]] *= 126;\n      qtab[table[7 + 8 * i]] *= 25;\n      qtab[table[3 + 8 * i]] *= 106;\n    }\n    for (let i = 0; i < 64; i += 1) {\n      qtab[i] >>= 6;\n    }\n  };\n  read(data, table) {\n    let count = 0;\n    let temp;\n    let t;\n    let i;\n    const length = data.get16();\n    count += 2;\n    while (count < length) {\n      temp = data.get8();\n      count += 1;\n      t = temp & 15;\n      if (t > 3) {\n        throw new Error(\"ERROR: Quantization table ID > 3\");\n      }\n      this.precision[t] = temp >> 4;\n      if (this.precision[t] === 0) {\n        this.precision[t] = 8;\n      } else if (this.precision[t] === 1) {\n        this.precision[t] = 16;\n      } else {\n        throw new Error(\"ERROR: Quantization table precision error\");\n      }\n      this.tq[t] = 1;\n      if (this.precision[t] === 8) {\n        for (i = 0; i < 64; i += 1) {\n          if (count > length) {\n            throw new Error(\"ERROR: Quantization table format error\");\n          }\n          this.quantTables[t][i] = data.get8();\n          count += 1;\n        }\n        _QuantizationTable.enhanceQuantizationTable(this.quantTables[t], table);\n      } else {\n        for (i = 0; i < 64; i += 1) {\n          if (count > length) {\n            throw new Error(\"ERROR: Quantization table format error\");\n          }\n          this.quantTables[t][i] = data.get16();\n          count += 2;\n        }\n        _QuantizationTable.enhanceQuantizationTable(this.quantTables[t], table);\n      }\n    }\n    if (count !== length) {\n      throw new Error(\"ERROR: Quantization table error [count!=Lq]\");\n    }\n    return 1;\n  }\n};\n\n// src/scan-component.ts\nvar ScanComponent = {\n  acTabSel: 0,\n  // AC table selector\n  dcTabSel: 0,\n  // DC table selector\n  scanCompSel: 0\n  // Scan component selector\n};\n\n// src/scan-header.ts\nvar ScanHeader = class {\n  ah = 0;\n  al = 0;\n  numComp = 0;\n  // Number of components in the scan\n  selection = 0;\n  // Start of spectral or predictor selection\n  spectralEnd = 0;\n  // End of spectral selection\n  components = [];\n  read(data) {\n    let count = 0;\n    let i;\n    let temp;\n    const length = data.get16();\n    count += 2;\n    this.numComp = data.get8();\n    count += 1;\n    for (i = 0; i < this.numComp; i += 1) {\n      this.components[i] = { ...ScanComponent };\n      if (count > length) {\n        throw new Error(\"ERROR: scan header format error\");\n      }\n      this.components[i].scanCompSel = data.get8();\n      count += 1;\n      temp = data.get8();\n      count += 1;\n      this.components[i].dcTabSel = temp >> 4;\n      this.components[i].acTabSel = temp & 15;\n    }\n    this.selection = data.get8();\n    count += 1;\n    this.spectralEnd = data.get8();\n    count += 1;\n    temp = data.get8();\n    this.ah = temp >> 4;\n    this.al = temp & 15;\n    count += 1;\n    if (count !== length) {\n      throw new Error(\"ERROR: scan header format error [count!=Ns]\");\n    }\n    return 1;\n  }\n};\n\n// src/decoder.ts\nvar littleEndian = function() {\n  const buffer = new ArrayBuffer(2);\n  new DataView(buffer).setInt16(\n    0,\n    256,\n    true\n    /* littleEndian */\n  );\n  return new Int16Array(buffer)[0] === 256;\n}();\nvar Decoder = class _Decoder {\n  static IDCT_P = [\n    0,\n    5,\n    40,\n    16,\n    45,\n    2,\n    7,\n    42,\n    21,\n    56,\n    8,\n    61,\n    18,\n    47,\n    1,\n    4,\n    41,\n    23,\n    58,\n    13,\n    32,\n    24,\n    37,\n    10,\n    63,\n    17,\n    44,\n    3,\n    6,\n    43,\n    20,\n    57,\n    15,\n    34,\n    29,\n    48,\n    53,\n    26,\n    39,\n    9,\n    60,\n    19,\n    46,\n    22,\n    59,\n    12,\n    33,\n    31,\n    50,\n    55,\n    25,\n    36,\n    11,\n    62,\n    14,\n    35,\n    28,\n    49,\n    52,\n    27,\n    38,\n    30,\n    51,\n    54\n  ];\n  static TABLE = [\n    0,\n    1,\n    5,\n    6,\n    14,\n    15,\n    27,\n    28,\n    2,\n    4,\n    7,\n    13,\n    16,\n    26,\n    29,\n    42,\n    3,\n    8,\n    12,\n    17,\n    25,\n    30,\n    41,\n    43,\n    9,\n    11,\n    18,\n    24,\n    31,\n    40,\n    44,\n    53,\n    10,\n    19,\n    23,\n    32,\n    39,\n    45,\n    52,\n    54,\n    20,\n    22,\n    33,\n    38,\n    46,\n    51,\n    55,\n    60,\n    21,\n    34,\n    37,\n    47,\n    50,\n    56,\n    59,\n    61,\n    35,\n    36,\n    48,\n    49,\n    57,\n    58,\n    62,\n    63\n  ];\n  static MAX_HUFFMAN_SUBTREE = 50;\n  static MSB = 2147483648;\n  static RESTART_MARKER_BEGIN = 65488;\n  static RESTART_MARKER_END = 65495;\n  buffer = null;\n  stream = null;\n  frame = new FrameHeader();\n  huffTable = new HuffmanTable();\n  quantTable = new QuantizationTable();\n  scan = new ScanHeader();\n  DU = createArray(10, 4, 64);\n  // at most 10 data units in a MCU, at most 4 data units in one component\n  HuffTab = createArray(4, 2, 50 * 256);\n  IDCT_Source = [];\n  nBlock = [];\n  // number of blocks in the i-th Comp in a scan\n  acTab = createArray(10, 1);\n  // ac HuffTab for the i-th Comp in a scan\n  dcTab = createArray(10, 1);\n  // dc HuffTab for the i-th Comp in a scan\n  qTab = createArray(10, 1);\n  // quantization table for the i-th Comp in a scan\n  marker = 0;\n  markerIndex = 0;\n  numComp = 0;\n  restartInterval = 0;\n  selection = 0;\n  xDim = 0;\n  yDim = 0;\n  xLoc = 0;\n  yLoc = 0;\n  outputData = null;\n  restarting = false;\n  mask = 0;\n  numBytes = 0;\n  precision = void 0;\n  components = [];\n  getter = null;\n  setter = null;\n  output = null;\n  selector = null;\n  /**\n   * The Decoder constructor.\n   * @property {number} numBytes - number of bytes per component\n   * @type {Function}\n   */\n  constructor(buffer, numBytes) {\n    this.buffer = buffer ?? null;\n    this.numBytes = numBytes ?? 0;\n  }\n  /**\n   * Returns decompressed data.\n   */\n  decompress(buffer, offset, length) {\n    const result = this.decode(buffer, offset, length);\n    return result.buffer;\n  }\n  decode(buffer, offset, length, numBytes) {\n    let scanNum = 0;\n    const pred = [];\n    let i;\n    let compN;\n    const temp = [];\n    const index = [];\n    let mcuNum;\n    if (buffer) {\n      this.buffer = buffer;\n    }\n    if (numBytes !== void 0) {\n      this.numBytes = numBytes;\n    }\n    this.stream = new DataStream(this.buffer, offset, length);\n    this.buffer = null;\n    this.xLoc = 0;\n    this.yLoc = 0;\n    let current = this.stream.get16();\n    if (current !== 65496) {\n      throw new Error(\"Not a JPEG file\");\n    }\n    current = this.stream.get16();\n    while (current >> 4 !== 4092 || current === 65476) {\n      switch (current) {\n        case 65476:\n          this.huffTable.read(this.stream, this.HuffTab);\n          break;\n        case 65484:\n          throw new Error(\"Program doesn't support arithmetic coding. (format throw new IOException)\");\n        case 65499:\n          this.quantTable.read(this.stream, _Decoder.TABLE);\n          break;\n        case 65501:\n          this.restartInterval = this.readNumber() ?? 0;\n          break;\n        case 65504:\n        case 65505:\n        case 65506:\n        case 65507:\n        case 65508:\n        case 65509:\n        case 65510:\n        case 65511:\n        case 65512:\n        case 65513:\n        case 65514:\n        case 65515:\n        case 65516:\n        case 65517:\n        case 65518:\n        case 65519:\n          this.readApp();\n          break;\n        case 65534:\n          this.readComment();\n          break;\n        default:\n          if (current >> 8 !== 255) {\n            throw new Error(\"ERROR: format throw new IOException! (decode)\");\n          }\n      }\n      current = this.stream.get16();\n    }\n    if (current < 65472 || current > 65479) {\n      throw new Error(\"ERROR: could not handle arithmetic code!\");\n    }\n    this.frame.read(this.stream);\n    current = this.stream.get16();\n    do {\n      while (current !== 65498) {\n        switch (current) {\n          case 65476:\n            this.huffTable.read(this.stream, this.HuffTab);\n            break;\n          case 65484:\n            throw new Error(\"Program doesn't support arithmetic coding. (format throw new IOException)\");\n          case 65499:\n            this.quantTable.read(this.stream, _Decoder.TABLE);\n            break;\n          case 65501:\n            this.restartInterval = this.readNumber() ?? 0;\n            break;\n          case 65504:\n          case 65505:\n          case 65506:\n          case 65507:\n          case 65508:\n          case 65509:\n          case 65510:\n          case 65511:\n          case 65512:\n          case 65513:\n          case 65514:\n          case 65515:\n          case 65516:\n          case 65517:\n          case 65518:\n          case 65519:\n            this.readApp();\n            break;\n          case 65534:\n            this.readComment();\n            break;\n          default:\n            if (current >> 8 !== 255) {\n              throw new Error(\"ERROR: format throw new IOException! (Parser.decode)\");\n            }\n        }\n        current = this.stream.get16();\n      }\n      this.precision = this.frame.precision;\n      this.components = this.frame.components;\n      if (!this.numBytes) {\n        this.numBytes = Math.round(Math.ceil(this.precision / 8));\n      }\n      if (this.numBytes === 1) {\n        this.mask = 255;\n      } else {\n        this.mask = 65535;\n      }\n      this.scan.read(this.stream);\n      this.numComp = this.scan.numComp;\n      this.selection = this.scan.selection;\n      if (this.numBytes === 1) {\n        if (this.numComp === 3) {\n          this.getter = this.getValueRGB;\n          this.setter = this.setValueRGB;\n          this.output = this.outputRGB;\n        } else {\n          this.getter = this.getValue8;\n          this.setter = this.setValue8;\n          this.output = this.outputSingle;\n        }\n      } else {\n        this.getter = this.getValue8;\n        this.setter = this.setValue8;\n        this.output = this.outputSingle;\n      }\n      switch (this.selection) {\n        case 2:\n          this.selector = this.select2;\n          break;\n        case 3:\n          this.selector = this.select3;\n          break;\n        case 4:\n          this.selector = this.select4;\n          break;\n        case 5:\n          this.selector = this.select5;\n          break;\n        case 6:\n          this.selector = this.select6;\n          break;\n        case 7:\n          this.selector = this.select7;\n          break;\n        default:\n          this.selector = this.select1;\n          break;\n      }\n      for (i = 0; i < this.numComp; i += 1) {\n        compN = this.scan.components[i].scanCompSel;\n        this.qTab[i] = this.quantTable.quantTables[this.components[compN].quantTableSel];\n        this.nBlock[i] = this.components[compN].vSamp * this.components[compN].hSamp;\n        this.dcTab[i] = this.HuffTab[this.scan.components[i].dcTabSel][0];\n        this.acTab[i] = this.HuffTab[this.scan.components[i].acTabSel][1];\n      }\n      this.xDim = this.frame.dimX;\n      this.yDim = this.frame.dimY;\n      if (this.numBytes === 1) {\n        this.outputData = new Uint8Array(new ArrayBuffer(this.xDim * this.yDim * this.numBytes * this.numComp));\n      } else {\n        this.outputData = new Uint16Array(new ArrayBuffer(this.xDim * this.yDim * this.numBytes * this.numComp));\n      }\n      scanNum += 1;\n      while (true) {\n        temp[0] = 0;\n        index[0] = 0;\n        for (i = 0; i < 10; i += 1) {\n          pred[i] = 1 << this.precision - 1;\n        }\n        if (this.restartInterval === 0) {\n          current = this.decodeUnit(pred, temp, index);\n          while (current === 0 && this.xLoc < this.xDim && this.yLoc < this.yDim) {\n            this.output(pred);\n            current = this.decodeUnit(pred, temp, index);\n          }\n          break;\n        }\n        for (mcuNum = 0; mcuNum < this.restartInterval; mcuNum += 1) {\n          this.restarting = mcuNum === 0;\n          current = this.decodeUnit(pred, temp, index);\n          this.output(pred);\n          if (current !== 0) {\n            break;\n          }\n        }\n        if (current === 0) {\n          if (this.markerIndex !== 0) {\n            current = 65280 | this.marker;\n            this.markerIndex = 0;\n          } else {\n            current = this.stream.get16();\n          }\n        }\n        if (!(current >= _Decoder.RESTART_MARKER_BEGIN && current <= _Decoder.RESTART_MARKER_END)) {\n          break;\n        }\n      }\n      if (current === 65500 && scanNum === 1) {\n        this.readNumber();\n        current = this.stream.get16();\n      }\n    } while (current !== 65497 && this.xLoc < this.xDim && this.yLoc < this.yDim && scanNum === 0);\n    return this.outputData;\n  }\n  decodeUnit(prev, temp, index) {\n    if (this.numComp === 1) {\n      return this.decodeSingle(prev, temp, index);\n    } else if (this.numComp === 3) {\n      return this.decodeRGB(prev, temp, index);\n    } else {\n      return -1;\n    }\n  }\n  select1(compOffset) {\n    return this.getPreviousX(compOffset);\n  }\n  select2(compOffset) {\n    return this.getPreviousY(compOffset);\n  }\n  select3(compOffset) {\n    return this.getPreviousXY(compOffset);\n  }\n  select4(compOffset) {\n    return this.getPreviousX(compOffset) + this.getPreviousY(compOffset) - this.getPreviousXY(compOffset);\n  }\n  select5(compOffset) {\n    return this.getPreviousX(compOffset) + (this.getPreviousY(compOffset) - this.getPreviousXY(compOffset) >> 1);\n  }\n  select6(compOffset) {\n    return this.getPreviousY(compOffset) + (this.getPreviousX(compOffset) - this.getPreviousXY(compOffset) >> 1);\n  }\n  select7(compOffset) {\n    return (this.getPreviousX(compOffset) + this.getPreviousY(compOffset)) / 2;\n  }\n  decodeRGB(prev, temp, index) {\n    if (this.selector === null)\n      throw new Error(\"decode hasn't run yet\");\n    let actab, dctab, qtab, ctrC, i, k, j;\n    prev[0] = this.selector(0);\n    prev[1] = this.selector(1);\n    prev[2] = this.selector(2);\n    for (ctrC = 0; ctrC < this.numComp; ctrC += 1) {\n      qtab = this.qTab[ctrC];\n      actab = this.acTab[ctrC];\n      dctab = this.dcTab[ctrC];\n      for (i = 0; i < this.nBlock[ctrC]; i += 1) {\n        for (k = 0; k < this.IDCT_Source.length; k += 1) {\n          this.IDCT_Source[k] = 0;\n        }\n        let value = this.getHuffmanValue(dctab, temp, index);\n        if (value >= 65280) {\n          return value;\n        }\n        prev[ctrC] = this.IDCT_Source[0] = prev[ctrC] + this.getn(index, value, temp, index);\n        this.IDCT_Source[0] *= qtab[0];\n        for (j = 1; j < 64; j += 1) {\n          value = this.getHuffmanValue(actab, temp, index);\n          if (value >= 65280) {\n            return value;\n          }\n          j += value >> 4;\n          if ((value & 15) === 0) {\n            if (value >> 4 === 0) {\n              break;\n            }\n          } else {\n            this.IDCT_Source[_Decoder.IDCT_P[j]] = this.getn(index, value & 15, temp, index) * qtab[j];\n          }\n        }\n      }\n    }\n    return 0;\n  }\n  decodeSingle(prev, temp, index) {\n    if (this.selector === null)\n      throw new Error(\"decode hasn't run yet\");\n    let value, i, n, nRestart;\n    if (this.restarting) {\n      this.restarting = false;\n      prev[0] = 1 << this.frame.precision - 1;\n    } else {\n      prev[0] = this.selector();\n    }\n    for (i = 0; i < this.nBlock[0]; i += 1) {\n      value = this.getHuffmanValue(this.dcTab[0], temp, index);\n      if (value >= 65280) {\n        return value;\n      }\n      n = this.getn(prev, value, temp, index);\n      nRestart = n >> 8;\n      if (nRestart >= _Decoder.RESTART_MARKER_BEGIN && nRestart <= _Decoder.RESTART_MARKER_END) {\n        return nRestart;\n      }\n      prev[0] += n;\n    }\n    return 0;\n  }\n  //\tHuffman table for fast search: (HuffTab) 8-bit Look up table 2-layer search architecture, 1st-layer represent 256 node (8 bits) if codeword-length > 8\n  //\tbits, then the entry of 1st-layer = (# of 2nd-layer table) | MSB and it is stored in the 2nd-layer Size of tables in each layer are 256.\n  //\tHuffTab[*][*][0-256] is always the only 1st-layer table.\n  //\n  //\tAn entry can be: (1) (# of 2nd-layer table) | MSB , for code length > 8 in 1st-layer (2) (Code length) << 8 | HuffVal\n  //\n  //\tHuffmanValue(table   HuffTab[x][y] (ex) HuffmanValue(HuffTab[1][0],...)\n  //\t                ):\n  //\t    return: Huffman Value of table\n  //\t            0xFF?? if it receives a MARKER\n  //\t    Parameter:  table   HuffTab[x][y] (ex) HuffmanValue(HuffTab[1][0],...)\n  //\t                temp    temp storage for remainded bits\n  //\t                index   index to bit of temp\n  //\t                in      FILE pointer\n  //\t    Effect:\n  //\t        temp  store new remainded bits\n  //\t        index change to new index\n  //\t        in    change to new position\n  //\t    NOTE:\n  //\t      Initial by   temp=0; index=0;\n  //\t    NOTE: (explain temp and index)\n  //\t      temp: is always in the form at calling time or returning time\n  //\t       |  byte 4  |  byte 3  |  byte 2  |  byte 1  |\n  //\t       |     0    |     0    | 00000000 | 00000??? |  if not a MARKER\n  //\t                                               ^index=3 (from 0 to 15)\n  //\t                                               321\n  //\t    NOTE (marker and marker_index):\n  //\t      If get a MARKER from 'in', marker=the low-byte of the MARKER\n  //\t        and marker_index=9\n  //\t      If marker_index=9 then index is always > 8, or HuffmanValue()\n  //\t        will not be called\n  getHuffmanValue(table, temp, index) {\n    let code, input;\n    const mask = 65535;\n    if (!this.stream)\n      throw new Error(\"stream not initialized\");\n    if (index[0] < 8) {\n      temp[0] <<= 8;\n      input = this.stream.get8();\n      if (input === 255) {\n        this.marker = this.stream.get8();\n        if (this.marker !== 0) {\n          this.markerIndex = 9;\n        }\n      }\n      temp[0] |= input;\n    } else {\n      index[0] -= 8;\n    }\n    code = table[temp[0] >> index[0]];\n    if ((code & _Decoder.MSB) !== 0) {\n      if (this.markerIndex !== 0) {\n        this.markerIndex = 0;\n        return 65280 | this.marker;\n      }\n      temp[0] &= mask >> 16 - index[0];\n      temp[0] <<= 8;\n      input = this.stream.get8();\n      if (input === 255) {\n        this.marker = this.stream.get8();\n        if (this.marker !== 0) {\n          this.markerIndex = 9;\n        }\n      }\n      temp[0] |= input;\n      code = table[(code & 255) * 256 + (temp[0] >> index[0])];\n      index[0] += 8;\n    }\n    index[0] += 8 - (code >> 8);\n    if (index[0] < 0) {\n      throw new Error(\"index=\" + index[0] + \" temp=\" + temp[0] + \" code=\" + code + \" in HuffmanValue()\");\n    }\n    if (index[0] < this.markerIndex) {\n      this.markerIndex = 0;\n      return 65280 | this.marker;\n    }\n    temp[0] &= mask >> 16 - index[0];\n    return code & 255;\n  }\n  getn(PRED, n, temp, index) {\n    let result, input;\n    const one = 1;\n    const n_one = -1;\n    const mask = 65535;\n    if (this.stream === null)\n      throw new Error(\"stream not initialized\");\n    if (n === 0) {\n      return 0;\n    }\n    if (n === 16) {\n      if (PRED[0] >= 0) {\n        return -32768;\n      } else {\n        return 32768;\n      }\n    }\n    index[0] -= n;\n    if (index[0] >= 0) {\n      if (index[0] < this.markerIndex && !this.isLastPixel()) {\n        this.markerIndex = 0;\n        return (65280 | this.marker) << 8;\n      }\n      result = temp[0] >> index[0];\n      temp[0] &= mask >> 16 - index[0];\n    } else {\n      temp[0] <<= 8;\n      input = this.stream.get8();\n      if (input === 255) {\n        this.marker = this.stream.get8();\n        if (this.marker !== 0) {\n          this.markerIndex = 9;\n        }\n      }\n      temp[0] |= input;\n      index[0] += 8;\n      if (index[0] < 0) {\n        if (this.markerIndex !== 0) {\n          this.markerIndex = 0;\n          return (65280 | this.marker) << 8;\n        }\n        temp[0] <<= 8;\n        input = this.stream.get8();\n        if (input === 255) {\n          this.marker = this.stream.get8();\n          if (this.marker !== 0) {\n            this.markerIndex = 9;\n          }\n        }\n        temp[0] |= input;\n        index[0] += 8;\n      }\n      if (index[0] < 0) {\n        throw new Error(\"index=\" + index[0] + \" in getn()\");\n      }\n      if (index[0] < this.markerIndex) {\n        this.markerIndex = 0;\n        return (65280 | this.marker) << 8;\n      }\n      result = temp[0] >> index[0];\n      temp[0] &= mask >> 16 - index[0];\n    }\n    if (result < one << n - 1) {\n      result += (n_one << n) + 1;\n    }\n    return result;\n  }\n  getPreviousX(compOffset = 0) {\n    if (this.getter === null)\n      throw new Error(\"decode hasn't run yet\");\n    if (this.xLoc > 0) {\n      return this.getter(this.yLoc * this.xDim + this.xLoc - 1, compOffset);\n    } else if (this.yLoc > 0) {\n      return this.getPreviousY(compOffset);\n    } else {\n      return 1 << this.frame.precision - 1;\n    }\n  }\n  getPreviousXY(compOffset = 0) {\n    if (this.getter === null)\n      throw new Error(\"decode hasn't run yet\");\n    if (this.xLoc > 0 && this.yLoc > 0) {\n      return this.getter((this.yLoc - 1) * this.xDim + this.xLoc - 1, compOffset);\n    } else {\n      return this.getPreviousY(compOffset);\n    }\n  }\n  getPreviousY(compOffset = 0) {\n    if (this.getter === null)\n      throw new Error(\"decode hasn't run yet\");\n    if (this.yLoc > 0) {\n      return this.getter((this.yLoc - 1) * this.xDim + this.xLoc, compOffset);\n    } else {\n      return this.getPreviousX(compOffset);\n    }\n  }\n  isLastPixel() {\n    return this.xLoc === this.xDim - 1 && this.yLoc === this.yDim - 1;\n  }\n  outputSingle(PRED) {\n    if (this.setter === null)\n      throw new Error(\"decode hasn't run yet\");\n    if (this.xLoc < this.xDim && this.yLoc < this.yDim) {\n      this.setter(this.yLoc * this.xDim + this.xLoc, this.mask & PRED[0]);\n      this.xLoc += 1;\n      if (this.xLoc >= this.xDim) {\n        this.yLoc += 1;\n        this.xLoc = 0;\n      }\n    }\n  }\n  outputRGB(PRED) {\n    if (this.setter === null)\n      throw new Error(\"decode hasn't run yet\");\n    const offset = this.yLoc * this.xDim + this.xLoc;\n    if (this.xLoc < this.xDim && this.yLoc < this.yDim) {\n      this.setter(offset, PRED[0], 0);\n      this.setter(offset, PRED[1], 1);\n      this.setter(offset, PRED[2], 2);\n      this.xLoc += 1;\n      if (this.xLoc >= this.xDim) {\n        this.yLoc += 1;\n        this.xLoc = 0;\n      }\n    }\n  }\n  setValue8(index, val) {\n    if (!this.outputData)\n      throw new Error(\"output data not ready\");\n    if (littleEndian) {\n      this.outputData[index] = val;\n    } else {\n      this.outputData[index] = (val & 255) << 8 | val >> 8 & 255;\n    }\n  }\n  getValue8(index) {\n    if (this.outputData === null)\n      throw new Error(\"output data not ready\");\n    if (littleEndian) {\n      return this.outputData[index];\n    } else {\n      const val = this.outputData[index];\n      return (val & 255) << 8 | val >> 8 & 255;\n    }\n  }\n  setValueRGB(index, val, compOffset = 0) {\n    if (this.outputData === null)\n      return;\n    this.outputData[index * 3 + compOffset] = val;\n  }\n  getValueRGB(index, compOffset) {\n    if (this.outputData === null)\n      throw new Error(\"output data not ready\");\n    return this.outputData[index * 3 + compOffset];\n  }\n  readApp() {\n    if (this.stream === null)\n      return null;\n    let count = 0;\n    const length = this.stream.get16();\n    count += 2;\n    while (count < length) {\n      this.stream.get8();\n      count += 1;\n    }\n    return length;\n  }\n  readComment() {\n    if (this.stream === null)\n      return null;\n    let sb = \"\";\n    let count = 0;\n    const length = this.stream.get16();\n    count += 2;\n    while (count < length) {\n      sb += this.stream.get8();\n      count += 1;\n    }\n    return sb;\n  }\n  readNumber() {\n    if (this.stream === null)\n      return null;\n    const Ld = this.stream.get16();\n    if (Ld !== 4) {\n      throw new Error(\"ERROR: Define number format throw new IOException [Ld!=4]\");\n    }\n    return this.stream.get16();\n  }\n};\nexport {\n  ComponentSpec,\n  DataStream,\n  Decoder,\n  FrameHeader,\n  HuffmanTable,\n  QuantizationTable,\n  ScanComponent,\n  ScanHeader,\n  utils_exports as Utils\n};\n//# sourceMappingURL=lossless.js.map"],"names":["__defProp","__export","target","all","name","ComponentSpec","DataStream","data","offset","length","value","FrameHeader","count","temp","i","c","utils_exports","crc32","crcTable","createArray","makeCRCTable","dimensions","dim","rest","newArray","crcTable2","n","k","buffer","uint8view","crc","HuffmanTable","_HuffmanTable","HuffTab","t","j","tab","L","V","currentTable","QuantizationTable","_QuantizationTable","qtab","table","ScanComponent","ScanHeader","littleEndian","Decoder","_Decoder","numBytes","scanNum","pred","compN","index","mcuNum","current","prev","compOffset","actab","dctab","ctrC","nRestart","code","input","PRED","result","val","sb"],"mappings":"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GACA,GACA,GACA,GACA,GACA,EACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,EACJ,EACE,OAAO,MAAQ,CACb,EACA,EACA,EACA,EACA,GACA,GACA,GACA,GACA,EACA,EACA,EACA,GACA,GACA,GACA,GACA,GACA,EACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,EACJ,EACE,OAAO,oBAAsB,GAC7B,OAAO,IAAM,WACb,OAAO,qBAAuB,MAC9B,OAAO,mBAAqB,MAC5B,OAAS,KACT,OAAS,KACT,MAAQ,IAAIrC,EACZ,UAAY,IAAIoB,EAChB,WAAa,IAAIS,EACjB,KAAO,IAAIK,EACX,GAAK1B,EAAY,GAAI,EAAG,EAAE,EAE1B,QAAUA,EAAY,EAAG,EAAG,GAAK,GAAG,EACpC,YAAc,CAAA,EACd,OAAS,CAAA,EAET,MAAQA,EAAY,GAAI,CAAC,EAEzB,MAAQA,EAAY,GAAI,CAAC,EAEzB,KAAOA,EAAY,GAAI,CAAC,EAExB,OAAS,EACT,YAAc,EACd,QAAU,EACV,gBAAkB,EAClB,UAAY,EACZ,KAAO,EACP,KAAO,EACP,KAAO,EACP,KAAO,EACP,WAAa,KACb,WAAa,GACb,KAAO,EACP,SAAW,EACX,UAAY,OACZ,WAAa,CAAA,EACb,OAAS,KACT,OAAS,KACT,OAAS,KACT,SAAW,KAMX,YAAYS,EAAQqB,EAAU,CAC5B,KAAK,OAASrB,GAAU,KACxB,KAAK,SAAWqB,GAAY,CAC9B,CAIA,WAAWrB,EAAQpB,EAAQC,EAAQ,CAEjC,OAD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","x_google_ignoreList":[0]}